[{"C:\\Users\\Santushti\\Desktop\\santushti\\FLX-Hackathon\\frontend\\src\\index.js":"1","C:\\Users\\Santushti\\Desktop\\santushti\\FLX-Hackathon\\frontend\\src\\App.js":"2","C:\\Users\\Santushti\\Desktop\\santushti\\FLX-Hackathon\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\Santushti\\Desktop\\santushti\\FLX-Hackathon\\frontend\\src\\components\\Form\\Login.js":"4","C:\\Users\\Santushti\\Desktop\\santushti\\FLX-Hackathon\\frontend\\src\\components\\Form\\FormSignup.js":"5","C:\\Users\\Santushti\\Desktop\\santushti\\FLX-Hackathon\\frontend\\src\\components\\Form\\FormLogin.js":"6","C:\\Users\\Santushti\\Desktop\\santushti\\FLX-Hackathon\\frontend\\src\\components\\Navbar.js":"7","C:\\Users\\Santushti\\Desktop\\santushti\\FLX-Hackathon\\frontend\\src\\components\\ProductCard.js":"8","C:\\Users\\Santushti\\Desktop\\santushti\\FLX-Hackathon\\frontend\\src\\components\\Products.js":"9"},{"size":517,"mtime":1638469767682,"results":"10","hashOfConfig":"11"},{"size":532,"mtime":1638530372803,"results":"12","hashOfConfig":"11"},{"size":375,"mtime":1638469767687,"results":"13","hashOfConfig":"11"},{"size":393,"mtime":1638515200217,"results":"14","hashOfConfig":"11"},{"size":2235,"mtime":1638476986384,"results":"15","hashOfConfig":"11"},{"size":3475,"mtime":1638476873482,"results":"16","hashOfConfig":"11"},{"size":599,"mtime":1638513240962,"results":"17","hashOfConfig":"11"},{"size":12103,"mtime":1638529736328,"results":"18","hashOfConfig":"11"},{"size":1651,"mtime":1638532856347,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"13y5vx9",{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Santushti\\Desktop\\santushti\\FLX-Hackathon\\frontend\\src\\index.js",[],["43","44"],"C:\\Users\\Santushti\\Desktop\\santushti\\FLX-Hackathon\\frontend\\src\\App.js",["45","46","47","48","49"],"C:\\Users\\Santushti\\Desktop\\santushti\\FLX-Hackathon\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\Santushti\\Desktop\\santushti\\FLX-Hackathon\\frontend\\src\\components\\Form\\Login.js",["50"],"import React, {useState} from \"react\";\r\nimport FormSignup from \"./FormSignup\";\r\nimport FormLogin from \"./FormLogin\";\r\n\r\nfunction Login() {\r\n\r\n    const [sign, setSign] = useState(false)\r\n    return (\r\n        <div className=\"login\">\r\n            <br /><br /><br />\r\n            {sign === true? (<FormSignup/>) : (<FormLogin />)}\r\n          \r\n        </div>\r\n      );\r\n}\r\n\r\nexport default Login","C:\\Users\\Santushti\\Desktop\\santushti\\FLX-Hackathon\\frontend\\src\\components\\Form\\FormSignup.js",["51","52"],"import React, { useState } from \"react\";\r\n\r\nfunction FormSignup() {\r\n\r\n    const [values, setValues] = useState({\r\n\r\n        user: \"\",\r\n        email: \"\",\r\n        pwd1: \"\",\r\n        pwd2: \"\"\r\n    });\r\n\r\n    const handleChange= (e) =>{\r\n\r\n        const { name, value } = e.target;\r\n    setValues({\r\n      ...values,\r\n      [name]: value\r\n    });\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n\r\n        e.preventDefault();\r\n    }\r\n\r\n    return (\r\n        <div className=\"signup\">\r\n            <br/><br/>\r\n            <h1>Login</h1>\r\n            <br/>\r\n            <form className=\"form\">\r\n                \r\n                <div className=\"form-inputs\">\r\n                    <label className=\"form-label\" htmlFor=\"email\">\r\n                    \r\n                        <input className=\"form-input\"\r\n                            type=\"text\"\r\n                            placeholder=\"Email\"\r\n                            name=\"email\"\r\n                            onChange={handleChange}\r\n                            value={values.email}\r\n                            autoComplete=\"off\"\r\n                        />\r\n                    \r\n                        \r\n                    </label>\r\n                </div>\r\n                <br />\r\n                <div className=\"form-inputs\">\r\n                    <label className=\"form-label\" htmlFor=\"pwd1\">\r\n                    \r\n                        <input className=\"form-input\"\r\n                            type=\"password\"\r\n                            placeholder=\"Enter New Password\"\r\n                            name=\"pwd1\"\r\n                            onChange={handleChange}\r\n                            value={values.pwd1}\r\n                            autoComplete=\"off\"\r\n                        />\r\n    \r\n                        \r\n                    </label>\r\n                </div>\r\n                <br />\r\n\r\n                \r\n                <br /><br />\r\n                <button className=\"form-input-btn\" type=\"submit\">Login</button>\r\n                <span className='form-input-login'>\r\n                    Don't have an account? Signup <a href='#'>here</a>\r\n                </span>\r\n            </form>\r\n            <br/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FormSignup","C:\\Users\\Santushti\\Desktop\\santushti\\FLX-Hackathon\\frontend\\src\\components\\Form\\FormLogin.js",["53","54"],"import React, { useState } from \"react\";\r\n\r\nfunction FormLogin() {\r\n\r\n    const [values, setValues] = useState({\r\n\r\n        user: \"\",\r\n        email: \"\",\r\n        pwd1: \"\",\r\n        pwd2: \"\"\r\n    });\r\n\r\n    const handleChange= (e) =>{\r\n\r\n        const { name, value } = e.target;\r\n    setValues({\r\n      ...values,\r\n      [name]: value\r\n    });\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n\r\n        e.preventDefault();\r\n    }\r\n\r\n    return (\r\n        <div className=\"signup\">\r\n            <br/><br/>\r\n            <h1>Signup</h1>\r\n            <br/>\r\n            <form className=\"form\">\r\n                <div className=\"form-inputs\">\r\n                    <label className=\"form-label\" htmlFor=\"user\">\r\n                        \r\n                        \r\n                        <input className=\"form-input\"\r\n                            type=\"text\"\r\n                            placeholder=\"User Name\"\r\n                            name=\"user\"\r\n                            onChange={handleChange}\r\n                            value={values.user}\r\n                            autoComplete=\"off\"\r\n                        />\r\n                    \r\n                        \r\n                    </label>\r\n                </div>\r\n                <br />\r\n                <div className=\"form-inputs\">\r\n                    <label className=\"form-label\" htmlFor=\"email\">\r\n                    \r\n                        <input className=\"form-input\"\r\n                            type=\"text\"\r\n                            placeholder=\"Email\"\r\n                            name=\"email\"\r\n                            onChange={handleChange}\r\n                            value={values.email}\r\n                            autoComplete=\"off\"\r\n                        />\r\n                    \r\n                        \r\n                    </label>\r\n                </div>\r\n                <br />\r\n                <div className=\"form-inputs\">\r\n                    <label className=\"form-label\" htmlFor=\"pwd1\">\r\n                    \r\n                        <input className=\"form-input\"\r\n                            type=\"password\"\r\n                            placeholder=\"Enter New Password\"\r\n                            name=\"pwd1\"\r\n                            onChange={handleChange}\r\n                            value={values.pwd1}\r\n                            autoComplete=\"off\"\r\n                        />\r\n    \r\n                        \r\n                    </label>\r\n                </div>\r\n                <br />\r\n\r\n                <div className=\"form-inputs\">\r\n                    <label className=\"form-label\" htmlFor=\"pwd2\">\r\n    \r\n                        \r\n                        <input className=\"form-input\"\r\n                            type=\"password\"\r\n                            placeholder=\"Confirm Password\"\r\n                            name=\"pwd2\"\r\n                            onChange={handleChange}\r\n                            value={values.pwd2}\r\n                            autoComplete=\"off\"\r\n                        />\r\n        \r\n                        \r\n                    </label>\r\n                </div>\r\n                <br /><br />\r\n                <button className=\"form-input-btn\" type=\"submit\">Signup</button>\r\n                <span className='form-input-login'>\r\n                    Already have an account? Login <a href='#'>here</a>\r\n                </span>\r\n            </form>\r\n            <br/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FormLogin","C:\\Users\\Santushti\\Desktop\\santushti\\FLX-Hackathon\\frontend\\src\\components\\Navbar.js",["55","56","57","58","59","60","61","62"],"import React from \"react\";\r\nimport \"./Navbar.css\"\r\n\r\nfunction Navbar() {\r\n\r\n    return (\r\n\r\n        <div>\r\n            \r\n            <nav className=\"menu\">\r\n  <input className=\"menu-toggler\" type=\"checkbox\" />\r\n  <label for=\"menu-toggler\"></label>\r\n  <ul>\r\n    <li className=\"menu-item\">\r\n      <a href=\"\"></a>\r\n    </li>\r\n    <li className=\"menu-item\">\r\n      <a href=\"#\"></a>\r\n    </li>\r\n    <li className=\"menu-item\">\r\n      <a  href=\"#\"></a>\r\n    </li>\r\n    <li className=\"menu-item\">\r\n      <a href=\"#\"></a>\r\n    </li>\r\n    \r\n  </ul>\r\n</nav>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","C:\\Users\\Santushti\\Desktop\\santushti\\FLX-Hackathon\\frontend\\src\\components\\ProductCard.js",["63"],"C:\\Users\\Santushti\\Desktop\\santushti\\FLX-Hackathon\\frontend\\src\\components\\Products.js",["64"],{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":1,"column":8,"nodeType":"71","messageId":"72","endLine":1,"endColumn":12},{"ruleId":"69","severity":1,"message":"73","line":2,"column":8,"nodeType":"71","messageId":"72","endLine":2,"endColumn":13},{"ruleId":"69","severity":1,"message":"74","line":6,"column":8,"nodeType":"71","messageId":"72","endLine":6,"endColumn":19},{"ruleId":"69","severity":1,"message":"75","line":11,"column":10,"nodeType":"71","messageId":"72","endLine":11,"endColumn":20},{"ruleId":"69","severity":1,"message":"76","line":11,"column":22,"nodeType":"71","messageId":"72","endLine":11,"endColumn":30},{"ruleId":"69","severity":1,"message":"77","line":7,"column":18,"nodeType":"71","messageId":"72","endLine":7,"endColumn":25},{"ruleId":"69","severity":1,"message":"78","line":22,"column":11,"nodeType":"71","messageId":"72","endLine":22,"endColumn":23},{"ruleId":"79","severity":1,"message":"80","line":71,"column":51,"nodeType":"81","endLine":71,"endColumn":63},{"ruleId":"69","severity":1,"message":"78","line":22,"column":11,"nodeType":"71","messageId":"72","endLine":22,"endColumn":23},{"ruleId":"79","severity":1,"message":"80","line":102,"column":52,"nodeType":"81","endLine":102,"endColumn":64},{"ruleId":"82","severity":1,"message":"83","line":15,"column":7,"nodeType":"81","endLine":15,"endColumn":18},{"ruleId":"79","severity":1,"message":"80","line":15,"column":7,"nodeType":"81","endLine":15,"endColumn":18},{"ruleId":"82","severity":1,"message":"83","line":18,"column":7,"nodeType":"81","endLine":18,"endColumn":19},{"ruleId":"79","severity":1,"message":"80","line":18,"column":7,"nodeType":"81","endLine":18,"endColumn":19},{"ruleId":"82","severity":1,"message":"83","line":21,"column":7,"nodeType":"81","endLine":21,"endColumn":20},{"ruleId":"79","severity":1,"message":"80","line":21,"column":7,"nodeType":"81","endLine":21,"endColumn":20},{"ruleId":"82","severity":1,"message":"83","line":24,"column":7,"nodeType":"81","endLine":24,"endColumn":19},{"ruleId":"79","severity":1,"message":"80","line":24,"column":7,"nodeType":"81","endLine":24,"endColumn":19},{"ruleId":"84","severity":1,"message":"85","line":28,"column":18,"nodeType":"81","endLine":28,"endColumn":9921},{"ruleId":"84","severity":1,"message":"85","line":32,"column":29,"nodeType":"81","endLine":32,"endColumn":165},"no-native-reassign",["86"],"no-negated-in-lhs",["87"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Login' is defined but never used.","'ProductCard' is defined but never used.","'isLoggedIn' is assigned a value but never used.","'setLogin' is assigned a value but never used.","'setSign' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation"]